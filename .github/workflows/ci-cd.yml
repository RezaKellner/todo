name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  APP_IMAGE_NAME: ${{ github.repository }}-app
  DB_IMAGE_NAME: ${{ github.repository }}-db

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for app
      id: meta-app
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.APP_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha

    - name: Build and push app image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta-app.outputs.tags }}
        labels: ${{ steps.meta-app.outputs.labels }}

    - name: Create database Dockerfile
      run: |
        cat > Dockerfile.db << EOF
        FROM postgres:15-alpine
        ENV POSTGRES_DB=todoapp
        ENV POSTGRES_USER=todouser
        ENV POSTGRES_PASSWORD=todopass
        EOF

    - name: Extract metadata for database
      id: meta-db
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.DB_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha

    - name: Build and push database image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.db
        push: true
        tags: ${{ steps.meta-db.outputs.tags }}
        labels: ${{ steps.meta-db.outputs.labels }}